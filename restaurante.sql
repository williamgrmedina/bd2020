-- MySQL Script generated by MySQL Workbench
-- Sat Sep 12 16:55:40 2020
-- Model: Restaurante    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema esquema_restaurante
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema esquema_restaurante
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `esquema_restaurante` DEFAULT CHARACTER SET utf8mb4 ;
USE `esquema_restaurante` ;

-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Gerente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Gerente` (
  `login` VARCHAR(32) NOT NULL,
  `senha` VARCHAR(32) NOT NULL,
  `salario` DECIMAL(10,2) NOT NULL,
  `data_contratacao` DATE NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `e-mail` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`login`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Garcom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Garcom` (
  `login` VARCHAR(32) NOT NULL,
  `senha` VARCHAR(32) NOT NULL,
  `salario` DECIMAL(10,2) NOT NULL,
  `data_contratacao` DATE NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `e-mail` VARCHAR(45) NOT NULL,
  `Gerente_login` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`login`),
  INDEX `fk_Garcom_Gerente1_idx` (`Gerente_login` ASC) VISIBLE,
  CONSTRAINT `fk_Garcom_Gerente1`
    FOREIGN KEY (`Gerente_login`)
    REFERENCES `esquema_restaurante`.`Gerente` (`login`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Operador_Caixa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Operador_Caixa` (
  `login` VARCHAR(32) NOT NULL,
  `senha` VARCHAR(32) NOT NULL,
  `salario` DECIMAL(10,2) NOT NULL,
  `data_contratacao` DATE NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  `e-mail` VARCHAR(45) NOT NULL,
  `Gerente_login` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`login`),
  INDEX `fk_Operador_Caixa_Gerente1_idx` (`Gerente_login` ASC) VISIBLE,
  CONSTRAINT `fk_Operador_Caixa_Gerente1`
    FOREIGN KEY (`Gerente_login`)
    REFERENCES `esquema_restaurante`.`Gerente` (`login`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Cliente_Online`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Cliente_Online` (
  `login` VARCHAR(32) NOT NULL,
  `senha` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`login`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Pedido` (
  `idPedido` INT NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(12) NOT NULL,
  `inicio_atendimento` TIMESTAMP(2) NOT NULL,
  `status_pedido` VARCHAR(45) NOT NULL,
  `fim_atendimento` TIMESTAMP(2) NULL,
  `observacao` VARCHAR(45),
  `Gerente_login` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`idPedido`),
  INDEX `fk_Pedido_Gerente1_idx` (`Gerente_login` ASC) VISIBLE,
  CONSTRAINT `fk_Pedido_Gerente1`
    FOREIGN KEY (`Gerente_login`)
    REFERENCES `esquema_restaurante`.`Gerente` (`login`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Pedido_Item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Pedido_Item` (
  `nome_item` VARCHAR(45) NOT NULL,
  `preco` DECIMAL(10,2) NULL,
  `quantidade` INT NOT NULL,
  `Pedido_idPedido` INT NOT NULL,
  PRIMARY KEY (`nome_item`, `Pedido_idPedido`),
  INDEX `fk_Pedido_Item_Pedido1_idx` (`Pedido_idPedido` ASC) VISIBLE,
  CONSTRAINT `fk_Pedido_Item_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `esquema_restaurante`.`Pedido` (`idPedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Pedido_has_Garcom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Pedido_has_Garcom` (
  `Pedido_idPedido` INT NOT NULL,
  `Garcom_login` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`Pedido_idPedido`, `Garcom_login`),
  INDEX `fk_Pedido_has_Garcom_Garcom1_idx` (`Garcom_login` ASC) VISIBLE,
  INDEX `fk_Pedido_has_Garcom_Pedido1_idx` (`Pedido_idPedido` ASC) VISIBLE,
  CONSTRAINT `fk_Pedido_has_Garcom_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `esquema_restaurante`.`Pedido` (`idPedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Pedido_has_Garcom_Garcom1`
    FOREIGN KEY (`Garcom_login`)
    REFERENCES `esquema_restaurante`.`Garcom` (`login`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Pedido_has_Cliente_Online`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Pedido_has_Cliente_Online` (
  `Pedido_idPedido` INT NOT NULL,
  `Cliente_Online_login` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`Pedido_idPedido`, `Cliente_Online_login`),
  INDEX `fk_Pedido_has_Cliente_Online_Cliente_Online1_idx` (`Cliente_Online_login` ASC) VISIBLE,
  INDEX `fk_Pedido_has_Cliente_Online_Pedido1_idx` (`Pedido_idPedido` ASC) VISIBLE,
  CONSTRAINT `fk_Pedido_has_Cliente_Online_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `esquema_restaurante`.`Pedido` (`idPedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Pedido_has_Cliente_Online_Cliente_Online1`
    FOREIGN KEY (`Cliente_Online_login`)
    REFERENCES `esquema_restaurante`.`Cliente_Online` (`login`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `esquema_restaurante`.`Pedido_has_Operador_Caixa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `esquema_restaurante`.`Pedido_has_Operador_Caixa` (
  `Pedido_idPedido` INT NOT NULL,
  `Operador_Caixa_login` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`Pedido_idPedido`, `Operador_Caixa_login`),
  INDEX `fk_Pedido_has_Operador_Caixa_Operador_Caixa1_idx` (`Operador_Caixa_login` ASC) VISIBLE,
  INDEX `fk_Pedido_has_Operador_Caixa_Pedido1_idx` (`Pedido_idPedido` ASC) VISIBLE,
  CONSTRAINT `fk_Pedido_has_Operador_Caixa_Pedido1`
    FOREIGN KEY (`Pedido_idPedido`)
    REFERENCES `esquema_restaurante`.`Pedido` (`idPedido`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Pedido_has_Operador_Caixa_Operador_Caixa1`
    FOREIGN KEY (`Operador_Caixa_login`)
    REFERENCES `esquema_restaurante`.`Operador_Caixa` (`login`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `esquema_restaurante`;

DELIMITER $$
USE `esquema_restaurante`$$
CREATE DEFINER = CURRENT_USER TRIGGER `esquema_restaurante`.`Gerente_BEFORE_INSERT` BEFORE INSERT ON `Gerente` FOR EACH ROW
BEGIN
	IF (NEW.salario < 0) THEN     
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid salary';
    END IF;
END$$

USE `esquema_restaurante`$$
CREATE DEFINER = CURRENT_USER TRIGGER `esquema_restaurante`.`Gerente_BEFORE_UPDATE` BEFORE UPDATE ON `Gerente` FOR EACH ROW
BEGIN
	IF (NEW.salario < 0) THEN     
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid salary';
    END IF;
END$$

USE `esquema_restaurante`$$
CREATE DEFINER = CURRENT_USER TRIGGER `esquema_restaurante`.`Garcom_BEFORE_INSERT` BEFORE INSERT ON `Garcom` FOR EACH ROW
BEGIN
	IF (NEW.salario < 0) THEN     
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid salary';
    END IF;
END$$

USE `esquema_restaurante`$$
CREATE DEFINER = CURRENT_USER TRIGGER `esquema_restaurante`.`Garcom_BEFORE_UPDATE` BEFORE UPDATE ON `Garcom` FOR EACH ROW
BEGIN
	IF (NEW.salario < 0) THEN     
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid salary';
    END IF;
END$$

USE `esquema_restaurante`$$
CREATE DEFINER = CURRENT_USER TRIGGER `esquema_restaurante`.`Operador_Caixa_BEFORE_INSERT` BEFORE INSERT ON `Operador_Caixa` FOR EACH ROW
BEGIN
	IF (NEW.salario < 0) THEN     
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid salary';
    END IF;
END$$

USE `esquema_restaurante`$$
CREATE DEFINER = CURRENT_USER TRIGGER `esquema_restaurante`.`Operador_Caixa_BEFORE_UPDATE` BEFORE UPDATE ON `Operador_Caixa` FOR EACH ROW
BEGIN
	IF (NEW.salario < 0) THEN     
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid salary';
    END IF;
END$$

USE `esquema_restaurante`$$
CREATE DEFINER = CURRENT_USER TRIGGER `esquema_restaurante`.`Pedido_Item_BEFORE_INSERT` BEFORE INSERT ON `Pedido_Item` FOR EACH ROW
BEGIN
	IF (NEW.preco < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid item price';
    ELSEIF (NEW.quantidade < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid item quantity';
	END IF;
END$$

USE `esquema_restaurante`$$
CREATE DEFINER = CURRENT_USER TRIGGER `esquema_restaurante`.`Pedido_Item_BEFORE_UPDATE` BEFORE UPDATE ON `Pedido_Item` FOR EACH ROW
BEGIN
	IF (NEW.preco < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid item price';
    ELSEIF (NEW.quantidade < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'invalid item quantity';
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
